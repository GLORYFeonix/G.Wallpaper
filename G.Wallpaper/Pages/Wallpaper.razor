@page "/wallpaper"

@using Newtonsoft.Json
@using Newtonsoft.Json.Linq

@using G.Wallpaper.Data

<Select TItem="string"
        TItemValue="string"
        DataSource="@sources"
        @bind-Value="@_selectedValue"
        Style="width: 120px;"
        Placeholder="Choose"
        OnSelectedItemChanged="@((source) => Console.WriteLine($"selectedItem:{source},selectedValue:{_selectedValue}"))">
</Select>

<Button Type="@ButtonType.Primary" Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Search" OnClick="GetWallpaperAsync" />
<Button Type="@ButtonType.Primary" Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Download" OnClick="DownloadWallpaperAsync" />

<Image Width="768px" Height="432px" Src="@uri.ToString()" Preview="false" Fallback="C:\\Users\\GFeonix\\Desktop\\G.Wallpaper\\G.Wallpaper\\Pictures\\fafa1.jpg" />

@code {
    private List<string> sources = new() { "Bing", "Unplash" };
    private string _selectedValue = "Bing";

    private HttpClient client = new();
    private Uri uri = new("C:\\Users\\GFeonix\\Desktop\\G.Wallpaper\\G.Wallpaper\\Pictures\\fafa.jpg");

    protected override async void OnInitialized()
    {
        
    }

    private async void GetWallpaperAsync()
    {
        var response = await client.GetAsync("https://cn.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1&mkt=zh-CN");

        response.EnsureSuccessStatusCode();

        var json = await response.Content.ReadAsStringAsync();
        JObject jsonData = (JObject)JsonConvert.DeserializeObject(json)!;

        uri = new($"https://cn.bing.com/{jsonData["images"][0]["url"]}");
    }

    private async void DownloadWallpaperAsync()
    {
        var response = await client.GetAsync(uri);

        response.EnsureSuccessStatusCode();

        //var path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData),"picture.jpg");
        var path = Path.Combine("C:\\Users\\GFeonix\\Desktop\\G.Wallpaper\\G.Wallpaper\\Pictures\\picture.jpg");
        Console.WriteLine($"Path: {path}");

        var fileStream = new FileStream(path, FileMode.OpenOrCreate);
        await response.Content.CopyToAsync(fileStream);
        Console.WriteLine($"Download from {uri}, done!");
    }
}